{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Tortoise Interpreter","google":"","tagline":"","body":"Assignment for lesson 6 of PL101 at http://www.nathansuniversity.com/.\r\n\r\nTortoise interpreter with lots of goodies:\r\n\r\n* if (<cond>) <if_true> else <if_false>\r\n* while (<cond>) <block>\r\n* return <optional_expr>;\r\n* numbers can have exponent, so now 31.41592e-1 is a valid format for numbers\r\n* ternary inline-if operator: <cond> ? <if_true> : <if_false>\r\n* ternary \"chained\" comparison operators: x < y < z is equivalent to\r\n  x < y && y < z, but y is evaluated only once. Valid for all comparison\r\n  operators except != ==\r\n* short-circuit boolean operators: && ||, && returns the right operand if\r\n  the left operand is nonzero, else zero; || returns the left operand unless\r\n  it's zero, and it's right operand if the left one is zero.\r\n* unary operators: + - ! (boolean not)\r\n* modulus operator: %\r\n* power operator <base> ** <exp> (right-associative)\r\n* alternate numeric format: #rrggbb or #rgb. Useful to set the color\r\n  of the pen through the pen_color function.\r\n* C-like single line comments: // comment\r\n* turtle functions: forward, backward, left, right, set_heading, get_heading,\r\n  set_position, get_position_x, get_position_y, home, clear, pen_up, pen_down,\r\n  is_pen_down, set_ink, get_ink, set_paper, get_paper, set_pen_width,\r\n  get_pen_width, set_pen_opacity, get_pen_opacity.\r\n* math functions: abs, ceil, floor, round, log, exp, sqrt, pow, min, max,\r\n  sin, cos, tan, asin, acos, atan, atan2 (trig functions work with degrees)\r\n* math constants: e, pi\r\n* C-like assign operators: += -= *= /= %= **= ||= &&=\r\n* optimized my parser using not-predicates to prevent excessive backtracking\r\n  (the sample was too slow)\r\n* corrected associativity of additive and multiplicative operators (they are\r\n  left-associative, and in the sample they are right-associative)\r\n* C-like convention regarding truth values: zero is false, anything else is\r\n  true. The boolean not operator converts 0 to 1, and nonzero to 0.\r\n* declaration and initialization through the extended syntax: var <id> := <expr>;\r\n* constant declaration similar to var declaration with initialization, which\r\n  is mandatory for constants: const <id> := <expr>;\r\n* custom CodeMirror-based syntax highlighter for Tortoise"}